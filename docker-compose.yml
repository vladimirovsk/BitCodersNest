services:

  websocket-itcoder:
    container_name: websocket-itcoder
    build:
      context: .
    command: [ "npm", "run", "sock:prod" ]
    restart: always
    env_file:
      - .env
    ports:
      - '8000:8000'
    networks:
      - itcoder

  rest-itcoder:
    container_name: rest-itcoder
    build:
      context: .
    command: ["npm", "run", "rest:prod"]
    restart: always
    env_file:
      - .env
    ports:
      - '9087:9087'
    networks:
      - itcoder

  serv-itcoder:
    container_name: serv-itcoder
    build:
      context: .
    command: [ "npm", "run", "serv:prod" ]
    restart: always
    env_file:
      - .env
    networks:
      - itcoder

  mongo_itcoder:
    image: mongo:6.0.3
    container_name: mongo_itcoder
    restart: always
    env_file:
      - .env
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_DB}
    volumes:
      - ./.docker/mongo-volume:/data/db
      - ./.docker/mongo-logs:/var/log/mongodb
    ports:
      - "27017:27017"
    networks:
      - itcoder
    user: "${UID}:${GID}"

  rabbitmq_itcoder:
    image: rabbitmq:3.9-management
    container_name: rabbitmq_itcoder
    restart: always
    env_file:
      - .env
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD}
      RABBITMQ_USERNAME: ${RABBITMQ_USER}
      RABBITMQ_PASSWORD: ${RABBITMQ_PASSWORD}
      RABBITMQ_NODENAME: ${RABBITMQ_NODENAME}
    volumes:
      - ./.docker/rabbitmq/data/:/var/lib/rabbitmq/
    ports:
      - 5672:5672
      - 15672:15672
    networks:
      - itcoder
networks:
  itcoder:
    driver: bridge
